name: Rust Release

on:
  push:
    branches:
      - "master"

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt,clippy

      - name: Cache Cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build (release)
        run: cargo build --release --verbose

      - name: Run Clippy
        run: cargo clippy --verbose --

      - name: Check formatting
        run: cargo fmt -- --check

      - name: Get version from Cargo.toml
        id: get_version
        run: |
          VERSION=$(cargo pkgid | sed -E 's/.*#(.*)/\1/')
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          artifacts: "target/release/Avi-core"
